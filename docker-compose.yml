services:
  shop-db-1:
    image: postgres:15
    restart: always
    env_file:
      - .env.prod
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - shopnet

  shop:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      bash -c "/wait-for-postgres.sh shop-db-1 &&
      python manage.py migrate &&
      exec gunicorn config.wsgi:application --bind 0.0.0.0:8000"
    ports:
      - "8000:8000"
    volumes:
      - static_volume:/code/staticfiles
    depends_on:
      - shop-db-1
      - kafka
      - redis
    env_file:
      - .env.prod
    networks:
      - shopnet

  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - shopnet

  kafka:
    image: confluentinc/cp-kafka:7.6.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - shopnet

  redis:
    image: redis:7
    restart: always
    ports:
      - "6379:6379"
    networks:
      - shopnet
  kafka-consumer:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      bash -c "python manage.py shell -c 'from kafka.consumer import start_kafka_consumer; start_kafka_consumer()'"
    depends_on:
      - kafka
      - shop
    env_file:
      - .env.prod
    networks:
      - shopnet
volumes:
  postgres_data:
  static_volume:

networks:
  shopnet:
    driver: bridge
