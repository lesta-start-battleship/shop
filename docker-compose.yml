services:
  db:
    image: postgres:15
    restart: always
    env_file:
      - .env.prod
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - shopnet

  redis:
    image: redis:7
    restart: always
    ports:
      - "6379:6379"
    networks:
      - shopnet

  shop:
    build:
      context: .
      dockerfile: Dockerfile
    entrypoint: /entrypoint.sh
    ports:
      - "8000:8000"
    volumes:
      - static_volume:/code/staticfiles
    depends_on:
      - db
      - redis
    env_file:
      - .env.prod
      - .env
    environment:
      - POSTGRES_HOST=db
      - KAFKA_BOOTSTRAP_SERVERS=37.9.53.228:9092
    networks:
      - shopnet

  saga-consumer:
    build:
      context: .
      dockerfile: Dockerfile
    entrypoint: ["/wait-for-postgres.sh", "db", "python", "manage.py", "run_saga_consumer"]
    depends_on:
      - db
    env_file:
      - .env
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=37.9.53.228:9092
    networks:
      - shopnet

  kafka-consumer:
    build:
      context: .
      dockerfile: Dockerfile
    entrypoint: ["/wait-for-postgres.sh", "db", "python", "manage.py", "run_product_consumer"]
    depends_on:
      - db
    env_file:
      - .env.prod
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=37.9.53.228:9092
    networks:
      - shopnet

volumes:
  postgres_data:
  static_volume:

networks:
  shopnet:
    driver: bridge